(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{347:function(s,e,a){"use strict";a.r(e);var n=a(3),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"str-search-检测的字符串-正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#str-search-检测的字符串-正则表达式"}},[s._v("#")]),s._v(" str.search(检测的字符串/正则表达式)")]),s._v(" "),a("p",[s._v("用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串.")]),s._v(" "),a("ul",[a("li",[s._v("返回第一个与正则表达式regexp匹配的子字符串在str中的位置.")]),s._v(" "),a("li",[s._v("如果正则表达式没有匹配到任何内容，那方法返回-1")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'Web前端web';\n\nconsole.log(str.search(/Web/)) //0\n\nconsole.log(str.search(/web/)) //5\n\n// i  不区分大小写\nconsole.log(str.search(/web/i)) //0\n\n//匹配不到返回 -1\nconsole.log(str.search(/webweb/)) //-1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"str-match-检测的字符串-正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#str-match-检测的字符串-正则表达式"}},[s._v("#")]),s._v(" str.match(检测的字符串/正则表达式)")]),s._v(" "),a("p",[s._v("在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。")]),s._v(" "),a("ul",[a("li",[s._v("匹配失败返回null")]),s._v(" "),a("li",[s._v("匹配成功\n"),a("ul",[a("li",[s._v("检测字符串 返回一组信息包含匹配的位置 匹配的字符串 检查的字符串等")]),s._v(" "),a("li",[s._v("正则表达式\n"),a("ul",[a("li",[s._v("非全局模式 返回一组信息包含匹配的位置 匹配的字符串 检查的字符串等")]),s._v(" "),a("li",[s._v("全局模式  返回匹配到的数据的值")])])])])])]),s._v(" "),a("h3",{attrs:{id:"例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[s._v("#")]),s._v(" 例子")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\nvar str = \'Web前端web,Web\';\n\n//检测字符串 返回一组信息\nconsole.log(str.match(\'前\')) //["前", index: 3, input: "Web前端web,Web", groups: undefined]\n\n\n//正则表达式 非全局模式 返回一组信息 只匹配第一个\nconsole.log(str.match(/web/)) ["Web", index: 0, input: "Web前端web,Web", groups: undefined]\n\n//返回匹配到的数据的值\nconsole.log(str.match(/web/g)) ["Web", "Web"]\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"match-与-exec-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match-与-exec-的区别"}},[s._v("#")]),s._v(" match() 与 exec() 的区别")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("exec方法的调用对象是正则表达式对象，方法的参数是字符串")])]),s._v(" "),a("li",[a("p",[s._v("match方法由字符串对象调用，方法的参数是正则表达式。")])]),s._v(" "),a("li",[a("p",[s._v("非全局匹配：两个方法的返回值完全一样。")])]),s._v(" "),a("li",[a("p",[s._v("全局匹配：返回结果出现很大不同")]),s._v(" "),a("ul",[a("li",[s._v("match方法返回一个存放所有匹配内容的数组（无视子表达式的匹配）。")]),s._v(" "),a("li",[s._v("exex方法返回数组不会存储所有的匹配，仅存储第一个匹配到的内容（存储在数字第一个元素），第二个元素存储第一个子表达式匹配到的内容，第三个元素存储第二个子表达式匹配到的内容，以此类推。")])])])]),s._v(" "),a("h2",{attrs:{id:"str-replace-regexp-replacement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#str-replace-regexp-replacement"}},[s._v("#")]),s._v(" str.replace(regexp,replacement)")]),s._v(" "),a("p",[s._v("替换源字符串中指定内容")]),s._v(" "),a("ul",[a("li",[s._v(".regexp：必需，正则表达式，用于在源字符串中检索将要被替换的内容。")]),s._v(" "),a("li",[s._v(".regexp：必需，正则表达式，用于在源字符串中检索将要被替换的内容。")])])])}),[],!1,null,null,null);e.default=t.exports}}]);