(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{353:function(s,n,a){"use strict";a.r(n);var e=a(3),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"str-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#str-search"}},[s._v("#")]),s._v(" str.search()")]),s._v(" "),a("p",[s._v("str.search(检测的字符串/正则表达式)")]),s._v(" "),a("p",[s._v("用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串.")]),s._v(" "),a("ul",[a("li",[s._v("返回第一个与正则表达式regexp匹配的子字符串在str中的位置.")]),s._v(" "),a("li",[s._v("如果正则表达式没有匹配到任何内容，那方法返回-1")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var str = 'Web前端web';\n\nconsole.log(str.search(/Web/)) //0\n\nconsole.log(str.search(/web/)) //5\n\n// i  不区分大小写\nconsole.log(str.search(/web/i)) //0\n\n//匹配不到返回 -1\nconsole.log(str.search(/webweb/)) //-1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"str-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#str-match"}},[s._v("#")]),s._v(" str.match()")]),s._v(" "),a("p",[s._v("str.match(检测的字符串/正则表达式)")]),s._v(" "),a("p",[s._v("在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。")]),s._v(" "),a("ul",[a("li",[s._v("匹配失败返回null")]),s._v(" "),a("li",[s._v("匹配成功\n"),a("ul",[a("li",[s._v("检测字符串 返回一组信息包含匹配的位置 匹配的字符串 检查的字符串等")]),s._v(" "),a("li",[s._v("正则表达式\n"),a("ul",[a("li",[s._v("非全局模式 返回一组信息包含匹配的位置 匹配的字符串 检查的字符串等")]),s._v(" "),a("li",[s._v("全局模式  返回匹配到的数据的值")])])])])])]),s._v(" "),a("h3",{attrs:{id:"例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[s._v("#")]),s._v(" 例子")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\nvar str = \'Web前端web,Web\';\n\n//检测字符串 返回一组信息\nconsole.log(str.match(\'前\')) //["前", index: 3, input: "Web前端web,Web", groups: undefined]\n\n\n//正则表达式 非全局模式 返回一组信息 只匹配第一个\nconsole.log(str.match(/web/)) ["Web", index: 0, input: "Web前端web,Web", groups: undefined]\n\n//返回匹配到的数据的值\nconsole.log(str.match(/web/g)) ["Web", "Web"]\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"match-与-exec-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match-与-exec-的区别"}},[s._v("#")]),s._v(" match() 与 exec() 的区别")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("exec方法的调用对象是正则表达式对象，方法的参数是字符串")])]),s._v(" "),a("li",[a("p",[s._v("match方法由字符串对象调用，方法的参数是正则表达式。")])]),s._v(" "),a("li",[a("p",[s._v("非全局匹配：两个方法的返回值完全一样。")])]),s._v(" "),a("li",[a("p",[s._v("全局匹配：返回结果出现很大不同")]),s._v(" "),a("ul",[a("li",[s._v("match方法返回一个存放所有匹配内容的数组（无视子表达式的匹配）。")]),s._v(" "),a("li",[s._v("exex方法返回数组不会存储所有的匹配，仅存储第一个匹配到的内容（存储在数字第一个元素），第二个元素存储第一个子表达式匹配到的内容，第三个元素存储第二个子表达式匹配到的内容，以此类推。")])])])]),s._v(" "),a("h2",{attrs:{id:"str-replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#str-replace"}},[s._v("#")]),s._v(" str.replace()")]),s._v(" "),a("p",[s._v("str.replace(regexp,replacement)")]),s._v(" "),a("p",[s._v("替换源字符串中指定内容")]),s._v(" "),a("ul",[a("li",[s._v(".regexp：必需，正则表达式，用于在源字符串中检索将要被替换的内容。")]),s._v(" "),a("li",[s._v(".replacement：必需，规定用于替换的内容，可以是字符串、正则相关的特殊值和函数。")]),s._v(" "),a("li",[s._v("返回一个新的字符串，是用 replacement 替换了 regexp 的第一次匹配或所有匹配之后得到的。(不会影响原字符串)")])]),s._v(" "),a("p",[s._v("replacement可以是具有特殊意义的美元$符号：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("字符")]),s._v(" "),a("th",[s._v("替换文本")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("$1、$2、...、$99")]),s._v(" "),a("td",[s._v("分别对应正则表达式第一个到第九九个子表达式匹配的内容")])]),s._v(" "),a("tr",[a("td",[s._v("$&")]),s._v(" "),a("td",[s._v("正则表达式匹配的字符串")])]),s._v(" "),a("tr",[a("td",[s._v("$`")]),s._v(" "),a("td",[s._v("位于匹配子串左侧的文本")])]),s._v(" "),a("tr",[a("td",[s._v("$'")]),s._v(" "),a("td",[s._v("位于匹配子串右侧的文本")])]),s._v(" "),a("tr",[a("td",[s._v("$$")]),s._v(" "),a("td",[s._v("直接量符号，也就是$字符本身")])])])]),s._v(" "),a("h3",{attrs:{id:"例子-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子-2"}},[s._v("#")]),s._v(" 例子")]),s._v(" "),a("ul",[a("li",[s._v("$1、$2、...、$99 的使用 - 把区号跟号码用-连接起来")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var hd = "(010)99999999 (020)8888888"\n\nlet reg = /\\((\\d*)\\)(\\d*)/g\n\n console.log(hd.match(/\\((\\d*)\\)(\\d*)/)) \n \x3c!-- \n ["(010)99999999", "010", "99999999", index: 0, input: "(010)99999999 (020)8888888", groups: undefined] \n 第一组($1) 010  第二组($2) 99999999 \n --\x3e\n\nconsole.log(hd.replace(reg, \'$1-$2\')) //010-99999999 020-8888888\n\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("ul",[a("li",[s._v("$` 与 $'")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var str = "web前端工程师"\n\nconsole.log(str.replace(/前端/, \'$`\')) //webweb工程师   $` 指匹配到的前端之前的字符串 web 用web替换前端\n\nconsole.log(str.replace(/前端/, "$\'")) //web工程师工程师   $` 指匹配到的前端之后的字符串 工程师 用工程师替换前端\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("$&")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var str = "web前端工程师"\n\nconsole.log(str.replace(/前端/, "$&")) // web前端工程师  $& 正则表达式匹配的字符串 前端 用前端替换前端 所以结果不变\n\n var str = "百度全球最大的中文搜索引擎、致力于让网民更便捷地获取信息，找到所求。百度超过千亿的中文网页数据库，可以瞬间找到相关的搜索结果。"\n\n//给str中的百度加上超链接 指向https://www.baidu.com   $&指向 百度\n\nconsole.log(str.replace(/百度/g, \'<a href="https://www.baidu.com" target=_blank>$&</a>\'))\n\n\x3c!-- \n<a href="https://www.baidu.com" target=_blank>百度</a>全球最大的中文搜索引擎、致力于让网民更便捷地获取信息，找到所求。<a href="https://www.baidu.com" target=_blank>百度</a>超过千亿的中文网页数据库，可以瞬间找到相关的搜索结果。\n--\x3e\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h2",{attrs:{id:"str-split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#str-split"}},[s._v("#")]),s._v(" str.split()")]),s._v(" "),a("p",[s._v("str.split(Reg,howmany)")]),s._v(" "),a("ul",[a("li",[s._v("regexp：必需，正则表达式，它所匹配到的字符串被用来分隔字符串。")]),s._v(" "),a("li",[s._v("howmany：可选，规定生成数组的长度。")])]),s._v(" "),a("h3",{attrs:{id:"例子-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子-3"}},[s._v("#")]),s._v(" 例子")]),s._v(" "),a("ul",[a("li",[s._v("不存在子表达式")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var str = \'2020-05-28\'\n\nconsole.log(str.split(/-/))\n\n\x3c!-- ["2020", "05", "28"]  --\x3e\n\nvar str = \'2020/05/28\'\n\nconsole.log(str.split(/\\//))\n\n\x3c!-- ["2020", "05", "28"]  --\x3e\n\nvar str = \'2020-05/28\'\n\nconsole.log(str.split(/[\\/-]/))\n\n\x3c!-- ["2020", "05", "28"]  --\x3e\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("ul",[a("li",[s._v("存在子表达式")])]),s._v(" "),a("p",[s._v("如果正则表达式包含子表达式，那么返回的数组中包括与这些子表达式匹配的字串。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var str = "web前端工程师"\n\nconsole.log(str.split(/eb/))\n\x3c!--  ["w", "前端工程师"]  --\x3e\n\nconsole.log(str.split(/e(b)/)) \n\x3c!-- \n["w", "b", "前端工程师"]\n因为存在子表达式(b)所以以eb切割后得到["w","前端工程师"],然后把子表达式匹配的字符串b添加在w后面得到["w", "b", "前端工程师"]\n --\x3e\n\n\nvar str = "web前端工程师"\nconsole.log(str.split(/\\w(b)/)) \n\x3c!-- \n\\w(b) 匹配到 eb\n["w", "b", "前端工程师"]\n --\x3e\n\nvar str = "web前端工程师"\nconsole.log(str.split(/\\w*(b)/)) \n\x3c!-- \n\\w(b) 匹配到 web\n["", "b", "前端工程师"]\n --\x3e\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("h2",{attrs:{id:"str-matchall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#str-matchall"}},[s._v("#")]),s._v(" str.matchAll()")]),s._v(" "),a("p",[s._v("str.matchAll(regExp)")]),s._v(" "),a("ul",[a("li",[s._v("方法返回一个包含所有匹配正则表达式的结果及分组捕获组的迭代器。")])]),s._v(" "),a("h3",{attrs:{id:"例子-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子-4"}},[s._v("#")]),s._v(" 例子")]),s._v(" "),a("p",[s._v("取出标签中的内容")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var str = "<h1>web</h1><h2>前端</h2><h1>工程师</h1>"\n\nvar textArr = []\n\nfor (const val of str.matchAll(/<(h[1-9])>([\\s\\S]+?)<\\/\\1>/g)) {\n\n    textArr.push(val[2])\n\n}\n\nconsole.log(textArr)\n\n\x3c!-- ["web", "前端", "工程师"] --\x3e\n\n\n使用一个扩展运算符...把迭代器转换为数组\nconsole.log([...str.matchAll(/<(h[1-9])>([\\s\\S]+?)<\\/\\1>/g)])\n\n\x3c!-- \n[\n  [\n    "<h1>web</h1>",\n    "h1",\n    "web"\n  ],\n  [\n    "<h2>前端</h2>",\n    "h2",\n    "前端"\n  ],\n  [\n    "<h1>工程师</h1>",\n    "h1",\n    "工程师"\n  ]\n] \n--\x3e\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br")])]),a("ul",[a("li",[s._v("自定义matchAll方法")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('String.prototype.matchAll = function(reg) {\n\n  var res = this.match(reg)\n\n  if (res) {\n\n    let str = this.replace(res[0], "^".replace(res[0].length));\n\n    let match = str.matchAll(reg) || [];\n\n    return [res, ...match];\n\n  }\n}\n\nvar js = "<h1>web</h1><h2>前端</h2><h1>工程师</h1>"\n\nconsole.log(JSON.stringify(js.matchAll(/<(h[1-9])>([\\s\\S]+?)<\\/\\1>/i), null, 2))\n\n\x3c!-- \n[\n  [\n    "<h1>web</h1>",\n    "h1",\n    "web"\n  ],\n  [\n    "<h2>前端</h2>",\n    "h2",\n    "前端"\n  ],\n  [\n    "<h1>工程师</h1>",\n    "h1",\n    "工程师"\n  ]\n]\n --\x3e\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br")])]),a("h3",{attrs:{id:"使用exce-实现全局匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用exce-实现全局匹配"}},[s._v("#")]),s._v(" 使用exce()实现全局匹配")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var js = \'<h1>web</h1><h2>前端</h2><h1>工程师</h1>\'\n\nfunction search(string, reg) {\n\n  var result = []\n\n  while (res = reg.exec(string)) {\n\n      result.push(res)\n\n  }\n\n  return result\n\n}\nconsole.log(JSON.stringify(search(js, /<(h[1-9])>([\\s\\S]+?)<\\/\\1>/g), null, 2))\n\n\n\x3c!-- \n[\n  [\n    "<h1>web</h1>",\n    "h1",\n    "web"\n  ],\n  [\n    "<h2>前端</h2>",\n    "h2",\n    "前端"\n  ],\n  [\n    "<h1>工程师</h1>",\n    "h1",\n    "工程师"\n  ]\n]\n --\x3e\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);