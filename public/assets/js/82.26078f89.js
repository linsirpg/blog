(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{434:function(a,s,e){"use strict";e.r(s);var r=e(3),t=Object(r.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"题目描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[a._v("#")]),a._v(" 题目描述")]),a._v(" "),e("p",[a._v("矩形以列表 [x1, y1, x2, y2] 的形式表示，其中 (x1, y1) 为左下角的坐标，(x2, y2) 是右上角的坐标。")]),a._v(" "),e("p",[a._v("如果相交的面积为正，则称两矩形重叠。需要明确的是，只在角或边接触的两个矩形不构成重叠。")]),a._v(" "),e("p",[a._v("给出两个矩形，判断它们是否重叠并返回结果。")]),a._v(" "),e("h2",{attrs:{id:"例子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[a._v("#")]),a._v(" 例子")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("输入：rec1 = [0,0,2,2], rec2 = [1,1,3,3]\n输出：true\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("输入：rec1 = [0,0,1,1], rec2 = [1,0,2,1]\n输出：false\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h2",{attrs:{id:"解题方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解题方法"}},[a._v("#")]),a._v(" 解题方法")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("/**\n * @param {number[]} A\n * @return {number}\n */\nvar isRectangleOverlap = function (rec1, rec2) {\n  if (Math.min(rec1[2], rec2[2]) > Math.max(rec2[0], rec1[0]) && (Math.min(rec2[3], rec1[3]) > Math.max(rec2[1], rec1[1]))) {\n    return true;\n  }\n  return false;\n  \n};\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br")])]),e("h2",{attrs:{id:"解题思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解题思路"}},[a._v("#")]),a._v(" 解题思路")]),a._v(" "),e("p",[a._v("如果两个矩形重叠,那边重叠的地方也是一个矩形")]),a._v(" "),e("p",[a._v("可以投影为x轴的一条直线跟y轴的一条直线")]),a._v(" "),e("p",[a._v("在坐标轴里两条直线重叠的话,其中一条直线的起始点一定在另外一条直线里")]),a._v(" "),e("p",[a._v("可以获取两条直线的起始值相比的较大的值(x1),并且获取两条直线结束值的较小值  x2")]),a._v(" "),e("p",[a._v("当x2 > x1 的时候,两条直线重叠")]),a._v(" "),e("p",[a._v("题目判断矩形重叠则可以转向考虑为 判断 x轴跟y轴两条直线是否都重叠")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Math.min(rec1[2], rec2[2]) > Math.max(rec2[0], rec1[0]) x 轴\nMath.min(rec2[3], rec1[3]) > Math.max(rec2[1], rec1[1]  y 轴\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);