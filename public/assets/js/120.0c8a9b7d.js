(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{453:function(s,n,e){"use strict";e.r(n);var a=e(3),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"regexp-test-检测的字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#regexp-test-检测的字符串"}},[s._v("#")]),s._v(" RegExp.test(检测的字符串)")]),s._v(" "),e("p",[s._v("检测一个字符串是否匹配某个正则表达式,如果字符串中含有匹配的文本,则返回true,否则返回false.")]),s._v(" "),e("ul",[e("li",[s._v("全局模式")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var str = 'Web前端web';\nvar reg = new RegExp('web', 'ig')\n// 修饰符 i  不区分大小写   g 全局匹配\n\n//全局匹配的情况下 初始位置为0\nconsole.log(reg.lastIndex); // 0\n\nconsole.log(reg.test(str)); // true\n\n//test 第一次调用 匹配到Web 下次的开始位置为 'b'属性为+1 为3\nconsole.log(reg.lastIndex); // 3\n\nconsole.log(reg.test(str)); // true\n//test 第二次调用 匹配到web 下次的开始位置为 'b' 属性为8\n\nconsole.log(reg.lastIndex); // 8\n\n\nconsole.log(reg.test(str)); // false\n\n//匹配不到,属性为0 \nconsole.log(reg.lastIndex) // 0\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("ul",[e("li",[s._v("非全局模式")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var str = 'Web前端web';\n\n// 修饰符 i  不区分大小写   \n\nvar reg = new RegExp('web', 'i')\nlastIndex 失效 每次匹配都是重0 开始\n\n\nconsole.log(reg.lastIndex); // 0\n\nconsole.log(reg.test(str)); // true\n\n\nconsole.log(reg.lastIndex); // 0\n\nconsole.log(reg.test(str)); // true\n\nreg.lastIndex = 20\n\nconsole.log(reg.lastIndex); // 20\n\n// lastIndex 失效 无论为何值都不会影响匹配\n\nconsole.log(reg.test(str)); // true\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("h2",{attrs:{id:"regexp-exec-检测的字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#regexp-exec-检测的字符串"}},[s._v("#")]),s._v(" RegExp.exec(检测的字符串)")]),s._v(" "),e("p",[s._v("检索字符串中的正则表达式的匹配.返回一个数组,其中存放匹配的结果.如果未找到匹配，则返回值为 null.")]),s._v(" "),e("ul",[e("li",[s._v("全局模式")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('var str = \'Web前端web\';\n\n// 修饰符 i  不区分大小写   g 全局匹配\n\n//全局匹配的情况下 初始位置为0\nconsole.log(reg.lastIndex); // 0\n\nconsole.log(reg.test(str)); // ["Web", index: 0, input: "Web前端web", groups: undefined]\n\n//test 第一次调用 匹配到Web 下次的开始位置为 \'b\'属性为+1 为3\nconsole.log(reg.lastIndex); // 3\n\nconsole.log(reg.test(str)); // ["web", index: 5, input: "Web前端web", groups: undefined]\n//test 第二次调用 匹配到web 下次的开始位置为 \'b\' 属性为8\n\nconsole.log(reg.lastIndex); // 8\n\n\nconsole.log(reg.test(str)); // null\n\n//匹配不到,属性为0 \nconsole.log(reg.lastIndex) // 0\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("ul",[e("li",[s._v("非全局模式")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('var str = \'Web前端web\';\n\n// 修饰符 i  不区分大小写   \n\n\nlastIndex 失效 每次匹配都是重0 开始\n\n\nconsole.log(reg.lastIndex); // 0\n\nconsole.log(reg.test(str)); // ["Web", index: 0, input: "Web前端web", groups: undefined]\n\n\nconsole.log(reg.lastIndex); // 0\n\nconsole.log(reg.test(str)); // ["Web", index: 0, input: "Web前端web", groups: undefined]\n\nreg.lastIndex = 20\n\nconsole.log(reg.lastIndex); // 20\n\n// lastIndex 失效 无论为何值都不会影响匹配\n\nconsole.log(reg.test(str)); // ["Web", index: 0, input: "Web前端web", groups: undefined]\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("ul",[e("li",[s._v("正则存在子表达式 (子表达式通过()定义，并用于对表达式进行分组)")])]),s._v(" "),e("p",[s._v("exex方法返回数组不会存储所有的匹配，仅存储第一个匹配到的内容（存储在数字第一个元素），第二个元素存储第一个子表达式匹配到的内容，第三个元素存储第二个子表达式匹配到的内容，以此类推。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('var str = \'Web前端webwe\';\n\nconsole.log(/w(e)(b)/ig.exec(str))\n\n//["Web", "e", "b", index: 0, input: "Web前端web", groups: undefined]\n\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("使用 exec() 跟 test() 时,要注意其属性lastIndex(即是否为全局模式)")])]),s._v(" "),e("li",[e("p",[s._v("exce() 跟test()的使用方法跟注意事项一致,区别在于匹配返回的结果不同")])])])])}),[],!1,null,null,null);n.default=t.exports}}]);