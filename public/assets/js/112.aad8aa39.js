(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{442:function(n,s,e){"use strict";e.r(s);var t=e(3),r=Object(t.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"排序合并两个正序数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#排序合并两个正序数组"}},[n._v("#")]),n._v(" 排序合并两个正序数组")]),n._v(" "),e("p",[n._v("归并排序（MERGE-SORT）是建立在归并操作上的一种有效的排序算法,该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为二路归并。归并排序是一种稳定的排序方法。")]),n._v(" "),e("p",[n._v("「归并排序」是分治思想的典型应用，它包含这样三个步骤：\n分解： 待排序的区间为 [l,r] m = (l + r)/2 把 [l,r] 分为 [l,m] 和 [m+1, r]\n解决： 使用归并排序递归地排序两个子序列\n合并： 把两个已经排好序的子序列 [l, m][l,m] 和 [m + 1, r][m+1,r] 合并起来")]),n._v(" "),e("h2",{attrs:{id:"代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[n._v("#")]),n._v(" 代码")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var reversePairs = function (nums) {\n  var num = 0;\n  mergeSort(nums);\n  function mergeSort(nums) {\n    if (nums.length < 2) return nums;\n    var mid = parseInt(nums.length / 2);\n    var left = nums.slice(0, mid);\n    var right = nums.slice(mid);\n    return merge(mergeSort(left), mergeSort(right))\n  }\n  function merge(left, right) {\n    var result = [];\n    var leftLen = left.length;\n    var rightLen = right.length;\n    var lengths = leftLen + rightLen;\n    var L = 0,\n      R = 0;\n    for (var index = 0; index < lengths; index++) {\n      if (L >= leftLen) {\n        result[index] = right[R];\n        R++;\n      } else if (R >= rightLen) {\n        result[index] = left[L];\n        L++;\n      } else if (left[L] > right[R]) {\n        result[index] = right[R];\n        R++;\n        num += leftLen - L;\n      } else if (left[L] <= right[R]) {\n        result[index] = left[L];\n        L++;\n      }\n    }\n    return result;\n  }\n  return num;\n};\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);